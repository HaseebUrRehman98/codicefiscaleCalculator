/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codicefis;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author haseeb
 */
public class CODICEFISCALE extends javax.swing.JFrame {

    private String Alfabeto[] = new String[14];
    private String comune[] = new String[8180];
    private BufferedReader br;

    public CODICEFISCALE() throws FileNotFoundException, IOException {

        initComponents();
        provincia.setText("<html>Comune<BR>O Stato Estero di Nascit√†</html>"); // 
        DATA.setText("<html>Comune<BR>Stato Estero diNascita</html>");
        //remove from combo already exit elements 
        sesso.removeAllItems();
        giorno.removeAllItems();
        mesi.removeAllItems();
        anno.removeAllItems();
        comunicombobox.removeAllItems();
        //add gender Opition
        sesso.addItem("M");
        sesso.addItem("F");
        //read file months
        br = new BufferedReader(new FileReader("mesi.txt"));
        while (br.ready()) {
            for (int i = 1; i <= 12; i++) {
                Alfabeto[i] = br.readLine();
            }
        }

        br.close();
        // aggiungo numeri nella combo box di giorni
        for (int i = 1; i <= 31; i++) {
            if (i < 10) {
                giorno.addItem("0" + i);
            } else {
                giorno.addItem("" + i);
            }
            if (i <= 12) {
                mesi.addItem("" + i);
            }
        }
        for (int i = 1900; i <= 2018; i++) {
            anno.addItem("" + i);

        }
        // aggiungo comuni nel combo box comune
        int i = 0;
        br = new BufferedReader(new FileReader("comuni.txt"));
        try {
            while (br.ready()) {
                comune[i] = br.readLine();
                comunicombobox.addItem(comune[i].substring(4));
                i++;
            }
        } catch (StringIndexOutOfBoundsException se) {
            System.out.println("errore stringa");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        COGNOME = new javax.swing.JLabel();
        cognome = new javax.swing.JTextField();
        nome1 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sesso = new javax.swing.JComboBox<>();
        provincia = new javax.swing.JLabel();
        DATA = new javax.swing.JLabel();
        giorno = new javax.swing.JComboBox<>();
        mesi = new javax.swing.JComboBox<>();
        anno = new javax.swing.JComboBox<>();
        codice = new javax.swing.JButton();
        codicefiscale = new javax.swing.JLabel();
        comunicombobox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        COGNOME.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        COGNOME.setText("COGNOME");

        nome1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nome1.setText("NOME");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SESSO");

        sesso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        provincia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        provincia.setText("PROVINCIA ");

        giorno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mesi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        anno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        codice.setText("Calcolo codice Fiscale");
        codice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codiceActionPerformed(evt);
            }
        });

        codicefiscale.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        comunicombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nome1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(COGNOME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(provincia, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cognome, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(nome))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comunicombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DATA, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(giorno, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mesi, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(anno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(codicefiscale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(codice, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(COGNOME, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cognome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nome1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sesso, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(provincia, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comunicombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(giorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mesi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(anno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(DATA, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(codice)
                .addGap(18, 18, 18)
                .addComponent(codicefiscale, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codiceActionPerformed
        //String cognome=this.cognome.getText().replace(" ", "");
        codicefiscale.setText("");
        String cog[] = new String[100];
        // lettura dal jtext piu separazione del cognome e nome e aggiunta al labelcalcoloCodiceFiscale
        separazioneVocaliConsonanti(cognome.getText().replace(" ", "").split(""), "cog");
        separazioneVocaliConsonanti(nome.getText().replace(" ", "").split(""), "nome");
        //anno
        String a = (String) anno.getSelectedItem();
        a = a.substring(2, 4);
        codicefiscale.setText(codicefiscale.getText() + a);
        // mese
        codicefiscale.setText(codicefiscale.getText() + Alfabeto[Integer.parseInt((String) mesi.getSelectedItem())]);
        //giorno
        String giorno = (String) this.giorno.getSelectedItem();
        if (sesso.getSelectedItem().equals("F")) {
            giorno = Integer.parseInt(giorno) + 40 + "";
            codicefiscale.setText(codicefiscale.getText() + giorno);
        } else {
            codicefiscale.setText(codicefiscale.getText() + giorno);
        }
        //comune
        for (int i = 0; i < comune.length; i++) {
            String com = comunicombobox.getSelectedItem().toString();
            if (com.equals(comune[i].substring(4))) {
                codicefiscale.setText(codicefiscale.getText() + comune[i].substring(0, 4));
                break;
            }
        }
        //  codice di controllo non assicurato
        int somma = 0;
        String caratteri[];
        String alfa[];
        caratteri = codicefiscale.getText().split("");
        for (int i = 0; i < caratteri.length; i++) {
            if (i % 2 == 0) {
                try {
                    br = new BufferedReader(new FileReader("caratterip.txt"));
                    while (br.ready()) {
                        alfa = br.readLine().split(" ");
                        if (caratteri[i].equals(alfa[0])) {
                            somma = somma + Integer.parseInt(alfa[1]);
                            break;
                        }
                    }

                } catch (FileNotFoundException fnf) {
                    System.out.println("errore file");
                } catch (Exception io) {
                    System.out.println("errore lettura");
                }
            } else {
                try {
                    br = new BufferedReader(new FileReader("caratteridis.txt"));
                    while (br.ready()) {
                        alfa = br.readLine().split(" ");
                        if (caratteri[i].equals(alfa[0])) {
                            somma = somma + Integer.parseInt(alfa[1]);
                            break;
                        }
                    }
                } catch (FileNotFoundException fnf) {
                    System.out.println("errore file dispari");
                } catch (Exception ieo) {
                    System.out.println("errore 2 dispari ");
                }
            }
        }
        somma = somma % 26;
        try {
            br = new BufferedReader(new FileReader("resto.txt"));
            while (br.ready()) {
                alfa = br.readLine().split(" ");
                if (somma == Integer.parseInt(alfa[0])) {
                    codicefiscale.setText(codicefiscale.getText() + alfa[1]);
                    break;
                }
            }
        } catch (FileNotFoundException ex) {
            System.out.println("errore  file pari");

        } catch (Exception io) {
            System.out.println("errore 3 pari");
        }


    }//GEN-LAST:event_codiceActionPerformed
    public void separazioneVocaliConsonanti(String stringa[], String type) {
        int k = 0;
        int j = 0;
        String vocali[] = new String[25];
        String consonanti[] = new String[25];
        for (int i = 0; i < stringa.length; i++) {
            if (stringa[i].equals("a") || stringa[i].equals("e") || stringa[i].equals("i") || stringa[i].equals("o") || stringa[i].equals("u")) {
                vocali[k] = stringa[i].toUpperCase();
                k++;

            } else if (stringa[i] != null) {
                consonanti[j] = stringa[i].toUpperCase();
                j++;

            }
        }
        if (type.equals("nome") && j >= 4) // se √® nome allora prendo .......
        {
            codicefiscale.setText(codicefiscale.getText() + consonanti[0] + consonanti[2] + consonanti[3]); // se esistono primo secondo e quarto
        } else if (type.equals("cog") && j >= 4) //se √® cog allora prendo....
        {
            codicefiscale.setText(codicefiscale.getText() + consonanti[0] + consonanti[1] + consonanti[2]);
        } else {
            Calcoloprimi6caratteri(vocali, consonanti, j, k);
        }
    }

    public void Calcoloprimi6caratteri(String vocali[], String consonanti[], int j, int k) {
        String stringa = "";
        int conta = 0;
        if (j > 0) // aggiungo consonanti che ho 
        {
            for (int i = 0; i < j; i++) {
                if (conta < 3) {
                    stringa = stringa + consonanti[i];
                    conta++;
                }

            }
        }
        if (k > 0 && conta < 3) // aggiugno vocali
        {
            for (int i = 0; i < 3; i++) {
                if (conta < 3 && vocali[i] != null) {
                    stringa = stringa + vocali[i];
                    conta++;
                }

            }

        }
        if (conta < 3) // aggiungo X se manca carattere
        {
            for (int i = conta; i < 3; i++) {
                stringa = stringa + "X";
            }
        }
        codicefiscale.setText(codicefiscale.getText() + stringa);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CODICEFISCALE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CODICEFISCALE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CODICEFISCALE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CODICEFISCALE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    new CODICEFISCALE().setVisible(true);
                } catch (IOException ex) {
                    System.out.println("file non trovato");
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel COGNOME;
    private javax.swing.JLabel DATA;
    private javax.swing.JComboBox<String> anno;
    private javax.swing.JButton codice;
    private javax.swing.JLabel codicefiscale;
    private javax.swing.JTextField cognome;
    private javax.swing.JComboBox<String> comunicombobox;
    private javax.swing.JComboBox<String> giorno;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> mesi;
    private javax.swing.JTextField nome;
    private javax.swing.JLabel nome1;
    private javax.swing.JLabel provincia;
    private javax.swing.JComboBox<String> sesso;
    // End of variables declaration//GEN-END:variables
}
